#
#	Makefile.config - compile-time settings for the GADGET-2 Makefile
#	Modified by Edoardo Carlesi 		2010 - 2012
#	edoardo.carlesi@uam.es
#--------------------------------------- Using general non standard models
# Enable VDE universe simulation
#VDE="on"

# Enable coupled dark matter - dark energy universe
#DEDM="on"

# DM only simulations have a faster implementation for the force computations and avoid checks on particle types
#DMONLY="on"

# Uncoupled dark energy simulation, it needs the DEDM_HUBBLE option switched on only
#DEONLY="on"

# Extra options - other Gadget extensions have been moved to libraries
#EXTRA_BARYONS="on"
#DARK_ENERGY="on"

PMGRID=256
EXEC=P-Gadget2-lcdm${PMGRID}

#--------------------------------------- Vector Dark Energy
ifeq (${VDE},"on")
EXEC=P-Gadget2-vde${PMGRID}
OPT = -DVDE
endif

#--------------------------------------- Un-Coupled Dark Energy Options
ifeq (${DEONLY},"on")
EXEC=P-Gadget2-ude${PMGRID}
OPT = -DDEDM_HUBBLE 	# Interpolate from an H table
endif

#--------------------------------------- Coupled Dark Energy Options
ifeq (${DEDM},"on")
EXEC=P-Gadget2-dedm${PMGRID}
OPT += -DDEDM_COUPLING	# Switches on the beta coupling, set from the parameterfile
OPT += -DDEDM_HUBBLE	# When switched off, the analytical formula for H is used instead of the table
OPT += -DDEDM_MASS	# When switched on, the modify_particle_masses() routine is called
OPT += -DDEDM_DRAG	# Switching on/off the cosmological drag factor when calculating the kick
OPT += -DDEDM_INFO	# Print data on the stderr about the status of the interaction

ifeq (${DMONLY}, "on")
OPT += -DDMONLY # This option is used to speed up the code in case of DM only simulations of coupled cosmologies by
		# rescaling the gravitational constant. No need to modify tree and PM algorithms, since now every 
		# particle is affected by both gravity and fifth force so that no additional information on tree nodes 
		# for different particles is necessary.
else
#OPT += -DDEDM_PMb   # If enabled, switches ON the PM algorithm modifications. This is a different type of implementation,
	   	    # the results are equivalent but the improvement in the speed of execution should be checked.
OPT += -DDEDM_PM    # If enabled, switches ON the PM algorithm modifications
OPT += -DDEDM_TREE  # If enabled, switches ON the Tree algorithm modifications
endif
endif

#--------------------------------------- Basic operation mode of code
OPT   +=  -DPERIODIC 
#OPT   +=  -DCOOLING    
#OPT   +=  -DSFR         
OPT   +=  -DUNEQUALSOFTENINGS

OPT   +=  -DLARGE_SIM

#--------------------------------------- TreePM Options
OPT   +=  -DPMGRID=${PMGRID}
#OPT   +=  -DASMTH=1.25
#OPT   +=  -DRCUT=4.5
#OPT   +=  -DPLACEHIGHRESREGION=3
#OPT   +=  -DENLARGEREGION=1.2
#OPT   +=  -DONLY_PM
#OPT   +=  -DHPM
#OPT   +=  -DHPM_SMTH=1.5

#--------------------------------------- Single/Double Precision
OPT   +=  -DDOUBLEPRECISION      
OPT   +=  -DDOUBLEPRECISION_FFTW      


#--------------------------------------- Things that are always recommended
OPT   +=  -DPEANOHILBERT
OPT   +=  -DWALLCLOCK   

#--------------------------------------- Things for special behaviour
#OPT   +=  -DNAVIERSTOKES
#OPT   +=  -DNOGRAVITY     
#OPT   +=  -DNOACCEL 
#OPT   +=  -DNOISMPRESSURE
#OPT   +=  -DNOFIXEDMASSINKERNEL  
#OPT   +=  -DNOGRADHSML  
#OPT   +=  -DNOVISCOSITYLIMITER
#OPT   +=  -DNOTREERND 
#OPT   +=  -DNOSTOP_WHEN_BELOW_MINTIMESTEP
#OPT   +=  -DNOPMSTEPADJUSTMENT
#OPT   +=  -DNOTYPEPREFIX_FFTW        
#OPT   +=  -DNO_TREEDATA_IN_RESTART
#OPT   +=  -DISOTHERM=200  # adds potential of an isothermal sphere
#OPT   +=  -DCOMPUTE_POTENTIAL_ENERGY
#OPT   +=  -DALLOWEXTRAPARAMS
#OPT   +=  -DRESCALEVINI        # rescale v_ini in read_ic_cluster
#OPT   +=  -DLONGIDS
#OPT   +=  -DNOGRAVITY 
#OPT   +=  -DLONGIDS 
#OPT   +=  -DINHOMOG_GASDISTR_HINT   # if the gas distribution is spatially very different
                                     # from collisionless particles, this helps to avoid
                                     # problems in the domain decomposition 
#OPT   +=  -DLONG_X=60
#OPT   +=  -DLONG_Y=5
#OPT   +=  -DLONG_Z=0.2
#OPT   +=  -DTWODIMS
#OPT   +=  -DSPH_BND_PARTICLES
#OPT   +=  -DNEW_RATES               # switches in updated cooling rates from Naoki


#--------------------------------------- Time integration options
OPT   +=  -DSYNCHRONIZATION
#OPT   +=  -DFLEXSTEPS
#OPT   +=  -DPSEUDOSYMMETRIC



#--------------------------------------- Output options
#OPT   +=  -DOUTPUTPOTENTIAL
#OPT   +=  -DOUTPUTACCELERATION
#OPT   +=  -DOUTPUTCHANGEOFENTROPY
#OPT   +=  -DOUTPUTTIMESTEP
#OPT   +=  -DOUTPUTCOOLRATE     # outputs cooling rate, and conduction rate if enabled
#OPT   +=  -DHAVE_HDF5  # needed when HDF5 I/O support is desired
#OPT   +=  -DOUTPUTBSMOOTH
#OPT   +=  -DOUTPUTDENSNORM
#OPT   +=  -DSAVEVISCOSITY     #  Saves alpha into snapshots
#OPT   +=  -DXXLINFO           #  Enables additional output for viscosityand bfield

#--------------------------------------- Testing and Debugging options
#OPT   +=  -DFORCETEST=0.1
#OPT   +=  -DDEBUG    # enables core-dumps and FPU exceptions
#OPT   +=  -DPARTICLE_DEBUG  # auxiliary communication of IDs


#--------------------------------------- Static NFW Potential
#OPT   +=  -DSTATICNFW
#OPT   +=  -DNFW_C=5
#OPT   +=  -DNFW_M200=100000.0
#OPT   +=  -DNFW_Eps=0.025
#OPT   +=  -DNFW_DARKFRACTION=0.85


#--------------------------------------- Static Hernquist Potential
#OPT   +=  -DSTATICHQ
#OPT   +=  -DHQ_M200=1.0
#OPT   +=  -DHQ_C=10
#OPT   +=  -DHQ_DARKFRACTION=0.9


#--------------------------------------- Thermal conduction
#OPT   +=  -DCONDUCTION 
#OPT   +=  -DCONDUCTION_CONSTANT 
#OPT   +=  -DCONDUCTION_SATURATION 


ifeq (${DARK_ENERGY}, "on")
#--------------------------------------- Dark energy
OPT   +=  -DDARKENERGY # Enables Dark Energy
OPT   +=  -DTIMEDEPDE  # read w(z) from a file

endif

#--------------------------------------- SPH viscosity options
#OPT   +=  -DCONVENTIONAL_VISCOSITY # enables the old viscosity
#OPT   +=  -DREDUCEVISC  # Enables time dependend viscosity
#OPT   +=  -DHIGHVISCSTART  # Start with high rather than low viscosity
#OPT   +=  -DALTVISCOSITY # enables alternative viscosity based on div(v)


#--------------------------------------- Magnetic Field options
#OPT   +=  -DMAGNETIC
#OPT   +=  -DMAGFORCE
#OPT   +=  -DBRIOWU
#OPT   +=  -DARTBPRES
#OPT   +=  -DDIVBFORCE
#OPT   +=  -DTRACEDIVB
#OPT   +=  -DDBOUTPUT
#OPT   +=  -DCORRECTDB
#OPT   +=  -DCORRECTBFRC
#OPT   +=  -DXXLINFO
#OPT   +=  -DBINISET
#OPT   +=  -DBSMOOTH


#--------------------------------------- Glass making
#OPT   +=  -DMAKEGLASS


ifeq (${EXTRA_BARYONS}, "on")

#OPT  += -DIC_CLUSTER   #Read Ic cluster

#--------------------------------------- Cecilia 's model
# All SFR_* options belong to Cecilia
#OPT   +=  -DSFR_METALS      
#OPT   +=  -DSFR_FEEDBACK
#OPT   +=  -DSFR_SNI
#OPT   +=  -DSFR_SNII
#OPT   +=  -DSFR_ENRICH
#OPT   +=  -DSFR_DECOUPLING  # Marri-like decoupling
#OPT   +=  -DSFR_PROMOTION
#OPT   +=  -DSFR_DIFFUSION

#-------------------------------------- nonequilibrium proimodal chemisitry 
#OPT    += -DNONEQUILIBRIUM
#OPT   +=  -DCHEMISTRY
#OPT   +=  -DCMB
#OPT   +=  -DRADIATION


#--------------------------------------- Cosmic Rays (Martin)
#OPT   +=  -DCOSMIC_RAYS       # Cosmic Rays Master Switch
#OPT   +=  -DCR_IC             # IC files contain CR information
#OPT   +=  -DCR_DISSIPATION    # Catastrophic losses
#OPT   +=  -DCR_THERMALIZATION # Coulomb cooling
#OPT   +=  -DCR_SHOCK          # Shock energy is directed into CR
#OPT   +=  -DCR_DIFFUSION      # Cosmic Ray diffusion
#OPT   +=  -DUPDATE_PARANOIA=1 # 1 = Update on every predict
			       # 2 = Update on every energy injection and
			       #     on every predict

#--------------------------------------- Mach number finder (Christoph)
#OPT  += -DMACHNUM          # Mach number finder


#--------------------------------------- SFR/feedback model

#OPT   +=  -DSOFTEREQS
#OPT   +=  -DMOREPARAMS    
#OPT   +=  -DMETALS       
#OPT   +=  -DSTELLARAGE   
#OPT   +=  -DWINDS
#OPT   +=  -DQUICK_LYALPHA
#OPT   +=  -DISOTROPICWINDS
#OPT   +=  -DMHM


#--------------------------------------- AGN stuff

#OPT   +=  -DFOF                     # enable FoF output 

#OPT   +=  -DBLACK_HOLES             # enable Black-Holes

#OPT   +=  -DBONDI                   # Bondi-Hoyle style accretion model
#OPT   +=  -DENFORCE_EDDINGTON_LIMIT # put a hard limit on the maximum accretion rate
#OPT   +=  -DBH_THERMALFEEDBACK      # couple a fraction of the BH luminosity into surrounding gas
#OPT   +=  -DBH_DRAG                 # Drag on black-holes due to accretion
#OPT   +=  -DSWALLOWGAS              # Enables stochastic accretion of gas particles consistent with growth rate of hole
#OPT   +=  -DEVALPOTENTIAL           # computes gravitational potential  
#OPT   +=  -DREPOSITION_ON_POTMIN    # repositions hole on potential minimum

#OPT    +=  -DBUBBLES                # switch on generation of hot bubbles in an 
                                     #isolated halo or the the biggest halo in 
                                     #the run

#OPT	+=  -DMULTI_BUBBLES 	     #switch on generation of hot bubbles in all 
                                     #haloes above certain mass threshold - note 
                                     #works only with FOF and BUBBLES have to be 
                                     #switched off

endif


#========================================================================


#--------------------------------------- Select target Computer 
#SYSTYPE="popia"
SYSTYPE="castor"
#SYSTYPE="MN"
#SYSTYPE="SuperMUC"
#SYSTYPE="laptop"

CC       =   mpicc          # sets the C-compiler (default)
#OPTIMIZE =   -O -Wall  -g   # optimization and warning flags (default)
OPTIMIZE =   -O -g   # optimization and warning flags (default)
MPICHLIB =  -lmpich

ifeq ($(SYSTYPE),"popia")
#CC       =   /home/edoardo/bin/mpicc   # sets the C-compiler
#OPTIMIZE =   -O3 -funroll-loops -mcpu=athlon-mp  -msse2 
#OPTIMIZE = -Wall -std=c99
GSL_INCL =   
GSL_LIBS =   -lgsl -lgslcblas
FFTW_INCL=   -I/home/edoardo/bin/include
FFTW_LIBS=   -L/home/edoardo/bin/lib 
MPICHLIB =
endif

ifeq ($(SYSTYPE),"castor")
CC = /home/carlesi/Programs/OPENMPI/bin/mpicc
DEBUG = -Wall -g
OPTIMIZE = -O3 -Wall -lpthread -pthread
GSL_INCL =   -I/home/carlesi/bin/include
GSL_LIBS =   -L/home/carlesi/bin/lib -lgsl -lgslcblas
FFTW_INCL=   -I/home/carlesi/lib/include
FFTW_LIBS=   -L/home/carlesi/lib/lib
MPICHLIB =  
endif


ifeq ($(SYSTYPE),"SuperMUC")
#CC       =   /home/edoardo/bin/mpicc   # sets the C-compiler
#OPTIMIZE =   -O3 -funroll-loops -mcpu=athlon-mp  -msse2 
#OPTIMIZE = -Wall -std=c99
GSL_INCL =   ${GSL_INC}
GSL_LIBS =   ${GSL_LIB}
FFTW_INCL=   ${FFTW_MPI_INC}
FFTW_LIBS=   ${FFTW_MPI_LIB}
MPICHLIB =
endif

ifeq ($(SYSTYPE),"laptop")
CC       =   mpicc   # sets the C-compiler
OPTIMIZE =   -O3 -funroll-loops -mcpu=athlon-mp  -msse2 -std=gnu99
GSL_INCL =   -I/home/edoardo/libs/include
GSL_LIBS =   -L/home/edoardo/libs/lib -lgsl -lgslcblas
FFTW_INCL=   -I/home/edoardo/libs/include
FFTW_LIBS=   -L/home/edoardo/libs/lib 
MPICHLIB =   -L/usr/lib
endif

ifneq (HAVE_HDF5,$(findstring HAVE_HDF5,$(OPT))) 
HDF5INCL =
HDF5LIB  =
endif

###############################################################################
#
# at compile-time. From the list below, please activate/deactivate the
# options that apply to your run. If you modify any of these options,
# make sure that you recompile the whole code by typing "make clean;
# make".
#
# Main code options:
#
#     These affect the physical model that is simulated.
#
#     - PERIODIC:   Set this if you want to have periodic boundary conditions.
#     - COOLING:    This enables radiative cooling and heating. It also enables
#                   an external UV background which is read from a file.
#     - SFR:        This enables star formation using an effective multiphase
#                   models. This option requires cooling.
#     - METALS:     This model activates the tracking of enrichment in gas and
#                   stars. Note that metal-line cooling is not included yet.
#     - STELLARAGE: This stores the formation redshift of each star particle.
#     - WINDS:      This activates galactic winds. Requires star formation. 
#     - ISOTROPICWINDS: This makes the wind isotropic. If not set the wind is
#                       spawned in an axial way. Requires winds to be activated.
#     - NOGRAVITY:  This switches off gravity. Makes only sense for pure
#                   SPH simulations in non-expanding space.
# 
# Options for SPH:
#  
#     - NOFIXEDMASSINKERNEL:  If set, the number of SPH particles in the kernel
#                             is kept constant instead of the mass.
#     - NOGRADHSML:           If actived, an equation of motion without grad(h)
#                             terms is used. 
#            Note: To have the default "entropy"-formulation of SPH (Springel & 
#                  Hernquist), the switches NOFIXEDMASSINKERNEL and NOGRADHSML 
#                  should *not* be set.
#     - NOVISCOSITYLIMITER:   If this is set, there is no explicit upper limit 
#                             on the viscosity that tries to prevent particle 
#                             'reflection' in case of poor timestepping.
#
# Numerical options:
#
#     - PMGRID:     This enables the TreePM method, i.e. the long-range force 
#                   is computed with a PM-algoritthm, and the short range force
#                   with the tree. The parameter has to be set to the size of the
#                   mesh that should be used, (e.g. 64, 96, 128, etc). The mesh
#                   dimensions need not necessarily be a power of two.
#                   Note: If the simulation is not in a periodic box, then a FFT
#                   method for vacuum boundaries is employed, using a mesh with 
#                   dimension twice that specified by PMGRID.
#     - PLACEHIGHRESREGION: If this option is set (will only work together
#                   with PMGRID), then the long range force is computed in two
#                   stages: One Fourier-grid is used to cover the whole simulation
#                   volume, allowing the computation of the large-scale force.
#                   A second Fourier mesh is placed on the region occupied by 
#                   "high-resolution" particles, allowing the computation of an
#                   intermediate scale force. Finally, the force on very small
#                   scales is supplemented by the tree. This procedure can be useful
#                   for "zoom-simulations", where the majority of particles (the
#                   high-res particles) are occupying only a small fraction of the
#                   volume. To activate this option, the parameter needs to be set
#                   to an integer that encodes the particle types that represent the
#                   high-res particles in the form of a bit mask. For example, if
#                   types 0, 1, and 4 form the high-res particles, set the parameter
#                   to PLACEHIGHRESREGION=1+2+16. The spatial region covered by the 
#                   high-res grid is determined automatically from the initial
#                   conditions. Note: If a periodic box is used, the high-res zone
#                   may not intersect the box boundaries.
#     - ENLARGEREGION: The spatial region covered by the high-res zone has a fixed
#                   size during the simulation, which initially is set to the 
#                   smallest region that encompasses all high-res particles. Normally, the 
#                   simulation will be interrupted, if high-res particles leave this
#                   region in the course of the run. However, by setting this parameter
#                   to a value larger than one, the high-res region can be expanded.
#                   For example, setting it to 1.4 will enlarge its side-length by 
#                   40% (it remains centered on the high-res particles). Hence, with 
#                   such a setting, the high-res region may expand or move by a
#                   limited amount. If in addition SYNCHRONIZATION is activated, then 
#                   the code will be able to continue even if high-res particles
#                   leave the initial high-res grid. In this case, the code will 
#                   update the size and position of the grid that is placed onto
#                   the high-resolution region automatically. To prevent that this 
#                   potentially happens every single PM step, one should nevertheless
#                   assign a value slightly larger than 1 to ENLARGEREGION.
#     - DOUBLEPRECISION: This makes the code store and compute internal 
#                        particle data in double precision. Note that output
#                        files are nevertheless written by converting to single
#                        precision.
#     - NOTREERND:       If this is not set, the tree construction will succeed
#                        even when there are a few particles at identical
#                        locations. This is done by `rerouting' particles once
#                        the node-size has fallen below 1.0e-3 of the softening
#                        length. When this option is activated, this will be
#                        surpressed and the tree construction will always fail
#                        if there are particles at extremely close coordinates.
#     - NOSTOP_WHEN_BELOW_MINTIMESTEP: If this is activated, the code will not 
#                        terminate when the timestep falls below the value of
#                        MinSizeTimestep specified in the parameterfile. This
#                        is useful for runs where one wants to enforce a
#                        constant timestep for all particles. This can be done
#                        by activating this option, and by setting Min- and
#                        MaxSizeTimestep to an equal value.
#     - PSEUDOSYMMETRIC: When this option is set, the code will try to "anticipate"
#                        timestep changes by extrapolating the change of the 
#                        acceleration into the future. This in general improves the
#                        long-term integration behaviour of periodic orbits.
#     - SYNCHRONIZATION: When this is set, particles may only increase their 
#                        timestep if the new timestep will put them into 
#                        synchronization with the higher time level. This typically
#                        means that only on half of the timesteps of a particle
#                        an increase of the step may occur.
#     - NOPMSTEPADJUSTMENT: When this is set, the long-range timestep for the
#                        PM force computation is always determined by MaxSizeTimeStep.
#                        Otherwise, it is set to the minimum of MaxSizeTimeStep and
#                        the timestep obtained for the maximum long-range force with
#                        an effective softening scale equal to the PM smoothing-scale.
# - LONG_X/Y/Z: 
#     These options can be used together with PERIODIC and NOGRAVITY only.
#     When set, the options define numerical factors that can be used to
#     distorts the periodic simulation cube into a parallelepiped of 
#     arbitrary aspect ratio. This can be useful for idealized SPH tests.
#
# - TWODIMS:
#     This effectively switches of one dimension in SPH, i.e. the code
#     follows only 2d hydrodynamics in the xy-, yz-, or xz-plane. This
#     only works with NOGRAVITY, and if all coordinates of the third
#     axis are exactly equal. Can be useful for idealized SPH tests.
#
# - SPH_BND_PARTICLES:
#     If this is set, particles with a particle-ID equal to zero do not
#     receive any SPH acceleration. This can be useful for idealized
#     SPH tests, where these particles represent fixed "walls".
#
#
# Architecture options:
#
#     - T3E:       The code assumes that sizeof(int)=4 holds. A few machines
#                  (like Cray T3E) have sizeof(int)=8. In this case, set the
#                  T3E flag.
#     - NOTYPEPREFIX_FFTW: If this is set, the fftw-header/libraries are accessed
#                  without type prefix (adopting whatever was chosen as default at compile
#                  of fftw). Otherwise, the type prefix 'd' for double is used.
# 
# Input options:
# 
#     - MOREPARAMS:  Activate this to allow a set of additional parameters in
#                    the parameterfile which control the star formation and 
#                    feedback sector. This option must be activated when star
#                    formation is switched on.
#
# Output options:
#
#     - OUTPUTPOTENTIAL: This will force the code to compute gravitational
#                        potentials for all particles each time a snapshot file
#                        is generated. This values are then included in the
#                        snapshot file. Note that the computation of the
#                        values of the potential costs additional time.
#     - OUTPUTACCELERATION: This will include the physical acceleration of
#                        each particle in snapshot files. 
#     - OUTPUTCHANGEOFENTROPY: This will include the rate of change of entropy
#                        of gas particles in snapshot files.
#     - OUTPUTTIMESTEP:  This will include an output of the timesteps actually
#                        taken by each particle.
# 
# Miscellaneous options:
#
#     - PEANOHILBERT:    This is a tuning option. When set, the code will bring
#                        the particles after each domain decomposition into
#                        Peano-Hilbert order. This improves cache utilization
#                        and performance.
#     - WALLCLOCK:       If set, a wallclock timer is used by the code to
#                        measure internal time consumption (see cpu-log file).
#                        Otherwise a timer that measures consumed processor
#                        ticks is used.
#
# Debugging/testing options:
#
#     - FORCETEST:       This can be set to check the force accuracy of the
#                        code. The option needs to be set to a number between
#                        0 and 1 (e.g. 0.01), which is taken to specify a
#                        random fraction of particles for which at each
#                        timestep forces by direct summation are computed. The 
#                        normal tree-forces and the "correct" direct summation
#                        forces are collected in a file. Note that the
#                        simulation itself is unaffected by this option, but it
#                        will of course run much(!) slower
#                        if FORCETEST*NumPart*NumPart >> NumPart. Note: Particle
#                        IDs must be set to numbers >=1 for this to work.
#
###############################################################################




#     - QUICK_LYALPHA:   This only works for cosmological simulations in periodic boxes
#                        with COOLING & SFR. (WINDS, METALS should be deselected).
#                        It will simply convert all gas particles above overdensity
#                        CritPhysOverdensity and with Temperature below 10^5 K to stars.
#                        This should still leave the Ly-Alpha forest largely unaffected,
#                        but should be faster. It is recommended to set GENERATIONS equal
#                        to 1 for maximum speed-up.



